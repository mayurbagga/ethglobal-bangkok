"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/utils/bin/blockscout.ts":
/*!*************************************!*\
  !*** ./src/utils/bin/blockscout.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"blockscout\": function() { return /* binding */ blockscout; }\n/* harmony export */ });\n/* harmony import */ var C_Users_Mayur_Desktop_WT_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js */ \"./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\");\n/* harmony import */ var C_Users_Mayur_Desktop_WT_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(C_Users_Mayur_Desktop_WT_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _toArray(arr) {\n    return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\n\nvar NETWORKS = {\n    // Mainnets\n    eth: {\n        name: \"Ethereum Mainnet\",\n        url: \"https://eth.blockscout.com\",\n        apiUrl: \"https://eth.blockscout.com/api/v2\",\n        symbol: \"ETH\",\n        chainId: 1,\n        isL2: false\n    },\n    arb: {\n        name: \"Arbitrum One\",\n        url: \"https://arbitrum.blockscout.com\",\n        apiUrl: \"https://arbitrum.blockscout.com/api/v2\",\n        symbol: \"ETH\",\n        chainId: 42161,\n        isL2: true\n    },\n    base: {\n        name: \"Base\",\n        url: \"https://base.blockscout.com\",\n        apiUrl: \"https://base.blockscout.com/api/v2\",\n        symbol: \"ETH\",\n        chainId: 8453,\n        isL2: true\n    },\n    polygon: {\n        name: \"Polygon PoS\",\n        url: \"https://polygon.blockscout.com\",\n        apiUrl: \"https://polygon.blockscout.com/api/v2\",\n        symbol: \"MATIC\",\n        chainId: 137,\n        isL2: true\n    },\n    gnosis: {\n        name: \"Gnosis Chain\",\n        url: \"https://gnosis.blockscout.com\",\n        apiUrl: \"https://gnosis.blockscout.com/api/v2\",\n        symbol: \"xDAI\",\n        chainId: 100,\n        isL2: false\n    },\n    optimism: {\n        name: \"Optimism\",\n        url: \"https://optimism.blockscout.com\",\n        apiUrl: \"https://optimism.blockscout.com/api/v2\",\n        symbol: \"ETH\",\n        chainId: 10,\n        isL2: true\n    },\n    zksync: {\n        name: \"zkSync Era\",\n        url: \"https://zksync.blockscout.com\",\n        apiUrl: \"https://zksync.blockscout.com/api/v2\",\n        symbol: \"ETH\",\n        chainId: 324,\n        isL2: true\n    },\n    // Testnets\n    sepolia: {\n        name: \"Sepolia Testnet\",\n        url: \"https://sepolia.blockscout.com\",\n        apiUrl: \"https://sepolia.blockscout.com/api/v2\",\n        symbol: \"ETH\",\n        chainId: 11155111,\n        isL2: false\n    },\n    goerli: {\n        name: \"Goerli Testnet\",\n        url: \"https://goerli.blockscout.com\",\n        apiUrl: \"https://goerli.blockscout.com/api/v2\",\n        symbol: \"ETH\",\n        chainId: 5,\n        isL2: false\n    },\n    \"arb-goerli\": {\n        name: \"Arbitrum Goerli\",\n        url: \"https://goerli.arbiscan.io\",\n        apiUrl: \"https://goerli.arbiscan.io/api/v2\",\n        symbol: \"ETH\",\n        chainId: 421613,\n        isL2: true\n    },\n    \"base-goerli\": {\n        name: \"Base Goerli\",\n        url: \"https://goerli.basescan.org\",\n        apiUrl: \"https://goerli.basescan.org/api/v2\",\n        symbol: \"ETH\",\n        chainId: 84531,\n        isL2: true\n    }\n};\nvar blockscoutCommands = {\n    getAddress: function getAddress(address) {\n        var network = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"eth\";\n        return _asyncToGenerator(C_Users_Mayur_Desktop_WT_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n            var net, response, data;\n            return C_Users_Mayur_Desktop_WT_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        _ctx.prev = 0;\n                        net = NETWORKS[network.toLowerCase()];\n                        if (net) {\n                            _ctx.next = 4;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\", \"Network '\".concat(network, \"' not found.\"));\n                    case 4:\n                        _ctx.next = 6;\n                        return axios__WEBPACK_IMPORTED_MODULE_1___default().get(\"\".concat(net.apiUrl, \"/addresses/\").concat(address));\n                    case 6:\n                        response = _ctx.sent;\n                        data = response.data.address;\n                        return _ctx.abrupt(\"return\", \"\\nAddress Information (\".concat(net.name, \"):\\nHash: \").concat(data.hash, \"\\nBalance: \").concat(data.balance, \" \").concat(net.symbol, \"\\nTransaction Count: \").concat(data.txCount, \"\\nType: \").concat(data.type, \"\\n\\nExplorer URL: \").concat(net.url, \"/address/\").concat(address, \"\\n\"));\n                    case 11:\n                        _ctx.prev = 11;\n                        _ctx.t0 = _ctx[\"catch\"](0);\n                        return _ctx.abrupt(\"return\", \"Error fetching address: \".concat(_ctx.t0.message));\n                    case 14:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee, null, [\n                [\n                    0,\n                    11\n                ]\n            ]);\n        }))();\n    },\n    getTransaction: function getTransaction(hash) {\n        var network = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"eth\";\n        return _asyncToGenerator(C_Users_Mayur_Desktop_WT_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n            var net, response, tx;\n            return C_Users_Mayur_Desktop_WT_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        _ctx.prev = 0;\n                        net = NETWORKS[network.toLowerCase()];\n                        if (net) {\n                            _ctx.next = 4;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\", \"Network '\".concat(network, \"' not found.\"));\n                    case 4:\n                        console.log(\"Fetching transaction \".concat(hash, \" from \").concat(net.name, \"...\"));\n                        _ctx.next = 7;\n                        return axios__WEBPACK_IMPORTED_MODULE_1___default().get(\"\".concat(net.apiUrl, \"/transactions/\").concat(hash));\n                    case 7:\n                        response = _ctx.sent;\n                        tx = response.data.tx;\n                        console.log(\"Transaction data received:\", tx);\n                        return _ctx.abrupt(\"return\", \"\\nTransaction Information (\".concat(net.name, \"):\\nHash: \").concat(tx.hash, \"\\nBlock: \").concat(tx.blockNumber, \"\\nFrom: \").concat(tx.from, \"\\nTo: \").concat(tx.to, \"\\nValue: \").concat(tx.value, \" \").concat(net.symbol, \"\\nGas Used: \").concat(tx.gasUsed, \"\\nStatus: \").concat(tx.status, \"\\n\\nExplorer URL: \").concat(net.url, \"/tx/\").concat(hash, \"\\n\"));\n                    case 13:\n                        _ctx.prev = 13;\n                        _ctx.t0 = _ctx[\"catch\"](0);\n                        return _ctx.abrupt(\"return\", \"Error fetching transaction: \".concat(_ctx.t0.message));\n                    case 16:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee, null, [\n                [\n                    0,\n                    13\n                ]\n            ]);\n        }))();\n    },\n    getBlock: function getBlock(number) {\n        var network = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"eth\";\n        return _asyncToGenerator(C_Users_Mayur_Desktop_WT_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n            var net, response, block;\n            return C_Users_Mayur_Desktop_WT_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        _ctx.prev = 0;\n                        net = NETWORKS[network.toLowerCase()];\n                        if (net) {\n                            _ctx.next = 4;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\", \"Network '\".concat(network, \"' not found.\"));\n                    case 4:\n                        _ctx.next = 6;\n                        return axios__WEBPACK_IMPORTED_MODULE_1___default().get(\"\".concat(net.apiUrl, \"/blocks/\").concat(number));\n                    case 6:\n                        response = _ctx.sent;\n                        block = response.data.block;\n                        return _ctx.abrupt(\"return\", \"\\nBlock Information (\".concat(net.name, \"):\\nHeight: \").concat(block.height, \"\\nHash: \").concat(block.hash, \"\\nTimestamp: \").concat(block.timestamp, \"\\nTransactions: \").concat(block.txCount, \"\\nGas Used: \").concat(block.gasUsed, \"\\n\\nExplorer URL: \").concat(net.url, \"/block/\").concat(number, \"\\n\"));\n                    case 11:\n                        _ctx.prev = 11;\n                        _ctx.t0 = _ctx[\"catch\"](0);\n                        return _ctx.abrupt(\"return\", \"Error fetching block: \".concat(_ctx.t0.message));\n                    case 14:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee, null, [\n                [\n                    0,\n                    11\n                ]\n            ]);\n        }))();\n    },\n    getNetworkStats: function getNetworkStats() {\n        var network = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"eth\";\n        return _asyncToGenerator(C_Users_Mayur_Desktop_WT_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n            var net, response, stats;\n            return C_Users_Mayur_Desktop_WT_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        _ctx.prev = 0;\n                        net = NETWORKS[network.toLowerCase()];\n                        if (net) {\n                            _ctx.next = 4;\n                            break;\n                        }\n                        return _ctx.abrupt(\"return\", \"Network '\".concat(network, \"' not found.\"));\n                    case 4:\n                        _ctx.next = 6;\n                        return axios__WEBPACK_IMPORTED_MODULE_1___default().get(\"\".concat(net.apiUrl, \"/stats\"));\n                    case 6:\n                        response = _ctx.sent;\n                        stats = response.data;\n                        return _ctx.abrupt(\"return\", \"\\nNetwork Statistics (\".concat(net.name, \"):\\nChain ID: \").concat(net.chainId, \"\\nSymbol: \").concat(net.symbol, \"\\nType: \").concat(net.isL2 ? \"Layer 2\" : \"Layer 1\", \"\\nAPI Version: v2\\n\\nExplorer URL: \").concat(net.url, \"\\n\"));\n                    case 11:\n                        _ctx.prev = 11;\n                        _ctx.t0 = _ctx[\"catch\"](0);\n                        return _ctx.abrupt(\"return\", \"Error fetching network stats: \".concat(_ctx.t0.message));\n                    case 14:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee, null, [\n                [\n                    0,\n                    11\n                ]\n            ]);\n        }))();\n    },\n    listNetworks: function listNetworks() {\n        return Object.entries(NETWORKS).map(function(param) {\n            var _param = _slicedToArray(param, 2), key = _param[0], net = _param[1];\n            return \"\".concat(key.padEnd(12), \" - \").concat(net.name, \" (\").concat(net.symbol, \")\\n  Chain ID: \").concat(net.chainId, \"\\n  Type: \").concat(net.isL2 ? \"Layer 2\" : \"Layer 1\", \"\\n  URL: \").concat(net.url);\n        }).join(\"\\n\\n\");\n    },\n    help: function help() {\n        return \"\\nBlockscout Explorer Commands:\\n\\n  networks                    - List all available networks\\n  address <addr> [network]    - Get address details\\n  tx <hash> [network]        - Get transaction details\\n  block <number> [network]   - Get block details\\n  stats [network]            - Get network statistics\\n\\nNetworks: \".concat(Object.keys(NETWORKS).join(\", \"), \"\\n\\nExamples:\\n  blockscout address 0x123... eth\\n  blockscout tx 0x456... arb\\n  blockscout block 12345 base\\n  blockscout stats polygon\\n\");\n    }\n};\nvar blockscout = function() {\n    var _ref = _asyncToGenerator(C_Users_Mayur_Desktop_WT_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(args) {\n        var _args, command, cmdArgs;\n        return C_Users_Mayur_Desktop_WT_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    if (!(args.length === 0 || args[0] === \"help\")) {\n                        _ctx.next = 2;\n                        break;\n                    }\n                    return _ctx.abrupt(\"return\", blockscoutCommands.help());\n                case 2:\n                    _args = _toArray(args), command = _args[0], cmdArgs = _args.slice(1);\n                    _ctx.t0 = command;\n                    _ctx.next = _ctx.t0 === \"networks\" ? 6 : _ctx.t0 === \"address\" ? 7 : _ctx.t0 === \"tx\" ? 12 : _ctx.t0 === \"block\" ? 17 : _ctx.t0 === \"stats\" ? 22 : 25;\n                    break;\n                case 6:\n                    return _ctx.abrupt(\"return\", blockscoutCommands.listNetworks());\n                case 7:\n                    if (cmdArgs[0]) {\n                        _ctx.next = 9;\n                        break;\n                    }\n                    return _ctx.abrupt(\"return\", \"Please provide an address. Usage: blockscout address <addr> [network]\");\n                case 9:\n                    _ctx.next = 11;\n                    return blockscoutCommands.getAddress(cmdArgs[0], cmdArgs[1]);\n                case 11:\n                    return _ctx.abrupt(\"return\", _ctx.sent);\n                case 12:\n                    if (cmdArgs[0]) {\n                        _ctx.next = 14;\n                        break;\n                    }\n                    return _ctx.abrupt(\"return\", \"Please provide a transaction hash. Usage: blockscout tx <hash> [network]\");\n                case 14:\n                    _ctx.next = 16;\n                    return blockscoutCommands.getTransaction(cmdArgs[0], cmdArgs[1]);\n                case 16:\n                    return _ctx.abrupt(\"return\", _ctx.sent);\n                case 17:\n                    if (cmdArgs[0]) {\n                        _ctx.next = 19;\n                        break;\n                    }\n                    return _ctx.abrupt(\"return\", \"Please provide a block number. Usage: blockscout block <number> [network]\");\n                case 19:\n                    _ctx.next = 21;\n                    return blockscoutCommands.getBlock(cmdArgs[0], cmdArgs[1]);\n                case 21:\n                    return _ctx.abrupt(\"return\", _ctx.sent);\n                case 22:\n                    _ctx.next = 24;\n                    return blockscoutCommands.getNetworkStats(cmdArgs[0]);\n                case 24:\n                    return _ctx.abrupt(\"return\", _ctx.sent);\n                case 25:\n                    return _ctx.abrupt(\"return\", \"Unknown command: \".concat(command, \". Type 'blockscout help' for available commands.\"));\n                case 26:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return function blockscout(args) {\n        return _ref.apply(this, arguments);\n    };\n}();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/bin/blockscout.ts\n");

/***/ })

});